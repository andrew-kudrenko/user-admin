[{"/home/nn/Документы/developing/users-admin/frontend/src/reportWebVitals.ts":"1","/home/nn/Документы/developing/users-admin/frontend/src/index.tsx":"2","/home/nn/Документы/developing/users-admin/frontend/src/components/app/App.tsx":"3","/home/nn/Документы/developing/users-admin/frontend/src/components/navigation/Navbar.tsx":"4","/home/nn/Документы/developing/users-admin/frontend/src/components/layouts/RootLayout.tsx":"5","/home/nn/Документы/developing/users-admin/frontend/src/components/navigation/NavbarLogo.tsx":"6","/home/nn/Документы/developing/users-admin/frontend/src/views/UsersView.tsx":"7","/home/nn/Документы/developing/users-admin/frontend/src/routes/BaseRoutes.tsx":"8","/home/nn/Документы/developing/users-admin/frontend/src/components/table/Table.tsx":"9","/home/nn/Документы/developing/users-admin/frontend/src/helpers/table.helpers.ts":"10","/home/nn/Документы/developing/users-admin/frontend/src/components/table/TableRow.tsx":"11","/home/nn/Документы/developing/users-admin/frontend/src/components/table/TableHead.tsx":"12","/home/nn/Документы/developing/users-admin/frontend/src/components/table/TableToolbar.tsx":"13","/home/nn/Документы/developing/users-admin/frontend/src/hooks/select.hook.ts":"14","/home/nn/Документы/developing/users-admin/frontend/src/helpers/date.helpers.ts":"15","/home/nn/Документы/developing/users-admin/frontend/src/styles/theme.ts":"16","/home/nn/Документы/developing/users-admin/frontend/src/interfaces/common.interfaces.ts":"17","/home/nn/Документы/developing/users-admin/frontend/src/redux/store.ts":"18","/home/nn/Документы/developing/users-admin/frontend/src/redux/theme/theme-slice.ts":"19","/home/nn/Документы/developing/users-admin/frontend/src/redux/root-reducer.ts":"20","/home/nn/Документы/developing/users-admin/frontend/src/components/theme/ThemeToggler.tsx":"21"},{"size":425,"mtime":1607432901754,"results":"22","hashOfConfig":"23"},{"size":495,"mtime":1608585938573,"results":"24","hashOfConfig":"23"},{"size":473,"mtime":1608585981042,"results":"25","hashOfConfig":"23"},{"size":1216,"mtime":1608578853497,"results":"26","hashOfConfig":"23"},{"size":536,"mtime":1608041055167,"results":"27","hashOfConfig":"23"},{"size":181,"mtime":1607515811517,"results":"28","hashOfConfig":"23"},{"size":994,"mtime":1608632542746,"results":"29","hashOfConfig":"23"},{"size":280,"mtime":1608039895382,"results":"30","hashOfConfig":"23"},{"size":3602,"mtime":1608038276698,"results":"31","hashOfConfig":"23"},{"size":929,"mtime":1608038119695,"results":"32","hashOfConfig":"23"},{"size":922,"mtime":1608040921878,"results":"33","hashOfConfig":"23"},{"size":2017,"mtime":1607961785214,"results":"34","hashOfConfig":"23"},{"size":1813,"mtime":1607696239694,"results":"35","hashOfConfig":"23"},{"size":1454,"mtime":1607699242698,"results":"36","hashOfConfig":"23"},{"size":317,"mtime":1608041945261,"results":"37","hashOfConfig":"23"},{"size":579,"mtime":1608579219552,"results":"38","hashOfConfig":"23"},{"size":75,"mtime":1608456858143,"results":"39","hashOfConfig":"23"},{"size":312,"mtime":1608307931160,"results":"40","hashOfConfig":"23"},{"size":421,"mtime":1608578108463,"results":"41","hashOfConfig":"23"},{"size":159,"mtime":1608578215609,"results":"42","hashOfConfig":"23"},{"size":809,"mtime":1608578736622,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"3jsmse",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/nn/Документы/developing/users-admin/frontend/src/reportWebVitals.ts",[],["90","91"],"/home/nn/Документы/developing/users-admin/frontend/src/index.tsx",[],"/home/nn/Документы/developing/users-admin/frontend/src/components/app/App.tsx",[],"/home/nn/Документы/developing/users-admin/frontend/src/components/navigation/Navbar.tsx",[],"/home/nn/Документы/developing/users-admin/frontend/src/components/layouts/RootLayout.tsx",[],"/home/nn/Документы/developing/users-admin/frontend/src/components/navigation/NavbarLogo.tsx",[],["92","93"],"/home/nn/Документы/developing/users-admin/frontend/src/views/UsersView.tsx",[],"/home/nn/Документы/developing/users-admin/frontend/src/routes/BaseRoutes.tsx",[],"/home/nn/Документы/developing/users-admin/frontend/src/components/table/Table.tsx",[],["94","95"],"/home/nn/Документы/developing/users-admin/frontend/src/helpers/table.helpers.ts",[],"/home/nn/Документы/developing/users-admin/frontend/src/components/table/TableRow.tsx",[],"/home/nn/Документы/developing/users-admin/frontend/src/components/table/TableHead.tsx",[],"/home/nn/Документы/developing/users-admin/frontend/src/components/table/TableToolbar.tsx",[],"/home/nn/Документы/developing/users-admin/frontend/src/hooks/select.hook.ts",["96"],"import { useEffect, useState } from 'react'\nimport { ID, IDType } from '../interfaces/entities.interfaces'\n\nexport function useSelect<T extends object>(observable: Array<ID<T>>) {\n  const [selected, setSelected] = useState<Array<IDType>>([])\n\n  function select(id: IDType | Array<IDType>) {\n    if (Array.isArray(id)) {\n      setSelected([...selected, ...id.filter(s => !selected.includes(s))])\n    } else {\n      const includes: boolean = selected.includes(id)\n\n      if (!includes) {\n        setSelected([...selected, id])\n      }\n    }\n  }\n\n  function unselect(id: IDType | Array<IDType>): void {\n    setSelected(\n      selected.filter(s => (Array.isArray(id) ? !id.includes(s) : s !== id))\n    )\n  }\n\n  function includes(id: IDType): boolean {\n    return selected.includes(id)\n  }\n\n  function allIsSelected(list: Array<IDType>): boolean {\n    return list.length === selected.length\n  }\n\n  function onToggleAll(list: Array<IDType>): void {\n    if (!allIsSelected(list)) {\n      select(list)\n    } else {\n      unselect(list)\n    }\n  }\n\n  function onToggle(id: IDType): void {\n    if (selected.includes(id)) {\n      unselect(id)\n    } else {\n      select(id)\n    }\n  }\n\n  function unselectAll(): void {\n    setSelected([])\n  }\n\n  useEffect(() => {\n    setSelected(selected.filter(s => observable.find(o => o.id === s)))\n  }, [observable])\n\n  return {\n    selected,\n    includes,\n    onToggle,\n    allIsSelected,\n    onToggleAll,\n    unselectAll,\n  }\n}\n","/home/nn/Документы/developing/users-admin/frontend/src/helpers/date.helpers.ts",[],"/home/nn/Документы/developing/users-admin/frontend/src/styles/theme.ts",[],"/home/nn/Документы/developing/users-admin/frontend/src/interfaces/common.interfaces.ts",[],"/home/nn/Документы/developing/users-admin/frontend/src/redux/store.ts",[],"/home/nn/Документы/developing/users-admin/frontend/src/redux/theme/theme-slice.ts",[],"/home/nn/Документы/developing/users-admin/frontend/src/redux/root-reducer.ts",[],"/home/nn/Документы/developing/users-admin/frontend/src/components/theme/ThemeToggler.tsx",[],{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","replacedBy":"100"},{"ruleId":"97","replacedBy":"101"},{"ruleId":"99","replacedBy":"102"},{"ruleId":"97","replacedBy":"103"},{"ruleId":"99","replacedBy":"104"},{"ruleId":"105","severity":1,"message":"106","line":55,"column":6,"nodeType":"107","endLine":55,"endColumn":18,"suggestions":"108"},"no-native-reassign",["109"],"no-negated-in-lhs",["110"],["109"],["110"],["109"],["110"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'selected'. Either include it or remove the dependency array. You can also do a functional update 'setSelected(s => ...)' if you only need 'selected' in the 'setSelected' call.","ArrayExpression",["111"],"no-global-assign","no-unsafe-negation",{"desc":"112","fix":"113"},"Update the dependencies array to be: [observable, selected]",{"range":"114","text":"115"},[1327,1339],"[observable, selected]"]