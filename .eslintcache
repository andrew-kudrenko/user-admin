[{"/home/nn/Документы/developing/users-admin/frontend/src/reportWebVitals.ts":"1","/home/nn/Документы/developing/users-admin/frontend/src/index.tsx":"2","/home/nn/Документы/developing/users-admin/frontend/src/components/app/App.tsx":"3","/home/nn/Документы/developing/users-admin/frontend/src/routes/BaseRoutes.tsx":"4","/home/nn/Документы/developing/users-admin/frontend/src/components/table/Table.tsx":"5","/home/nn/Документы/developing/users-admin/frontend/src/helpers/table.helpers.ts":"6","/home/nn/Документы/developing/users-admin/frontend/src/components/table/TableRow.tsx":"7","/home/nn/Документы/developing/users-admin/frontend/src/components/table/TableHead.tsx":"8","/home/nn/Документы/developing/users-admin/frontend/src/components/table/TableToolbar.tsx":"9","/home/nn/Документы/developing/users-admin/frontend/src/hooks/select.hook.ts":"10","/home/nn/Документы/developing/users-admin/frontend/src/helpers/date.helpers.ts":"11","/home/nn/Документы/developing/users-admin/frontend/src/styles/theme.ts":"12","/home/nn/Документы/developing/users-admin/frontend/src/interfaces/common.interfaces.ts":"13","/home/nn/Документы/developing/users-admin/frontend/src/redux/store.ts":"14","/home/nn/Документы/developing/users-admin/frontend/src/redux/theme/theme-slice.ts":"15","/home/nn/Документы/developing/users-admin/frontend/src/redux/root-reducer.ts":"16","/home/nn/Документы/developing/users-admin/frontend/src/components/theme/ThemeToggler.tsx":"17","/home/nn/Документы/developing/users-admin/frontend/src/components/layouts/editor-layout/EditorLayout.tsx":"18","/home/nn/Документы/developing/users-admin/frontend/src/components/layouts/editor-layout/EditorBottomToolbar.tsx":"19","/home/nn/Документы/developing/users-admin/frontend/src/components/buttons/StatefulButton.tsx":"20","/home/nn/Документы/developing/users-admin/frontend/src/helpers/form-validator-messages.helper.ts":"21","/home/nn/Документы/developing/users-admin/frontend/src/hooks/id-param.hook.ts":"22","/home/nn/Документы/developing/users-admin/frontend/src/views/users/UserFormView.tsx":"23","/home/nn/Документы/developing/users-admin/frontend/src/views/users/UsersView.tsx":"24","/home/nn/Документы/developing/users-admin/frontend/src/components/navigation/navbar/Navbar.tsx":"25","/home/nn/Документы/developing/users-admin/frontend/src/components/navigation/drawer/Drawer.tsx":"26","/home/nn/Документы/developing/users-admin/frontend/src/components/navigation/drawer/DrawerListOption.tsx":"27","/home/nn/Документы/developing/users-admin/frontend/src/hooks/local-storage.hook.ts":"28","/home/nn/Документы/developing/users-admin/frontend/src/components/navigation/navbar/NavbarLogo.tsx":"29","/home/nn/Документы/developing/users-admin/frontend/src/components/layouts/root/RootLayout.tsx":"30","/home/nn/Документы/developing/users-admin/frontend/src/components/layouts/filter/FilterLayout.tsx":"31","/home/nn/Документы/developing/users-admin/frontend/src/components/filters/UserFilter.tsx":"32","/home/nn/Документы/developing/users-admin/frontend/src/hooks/filter-state.hook.ts":"33"},{"size":425,"mtime":1607432901754,"results":"34","hashOfConfig":"35"},{"size":695,"mtime":1609235882415,"results":"36","hashOfConfig":"35"},{"size":473,"mtime":1608585981042,"results":"37","hashOfConfig":"38"},{"size":644,"mtime":1609608729997,"results":"39","hashOfConfig":"35"},{"size":3704,"mtime":1610112070437,"results":"40","hashOfConfig":"35"},{"size":929,"mtime":1608038119695,"results":"41","hashOfConfig":"35"},{"size":1798,"mtime":1609323987941,"results":"42","hashOfConfig":"43"},{"size":1996,"mtime":1608671509614,"results":"44","hashOfConfig":"35"},{"size":2030,"mtime":1608671629664,"results":"45","hashOfConfig":"35"},{"size":1454,"mtime":1609669021440,"results":"46","hashOfConfig":"47"},{"size":317,"mtime":1608041945261,"results":"48","hashOfConfig":"38"},{"size":805,"mtime":1608647177238,"results":"49","hashOfConfig":"35"},{"size":145,"mtime":1609063030089,"results":"50","hashOfConfig":"35"},{"size":298,"mtime":1608456309254,"results":"51","hashOfConfig":"43"},{"size":710,"mtime":1608633485988,"results":"52","hashOfConfig":"35"},{"size":159,"mtime":1608578215609,"results":"53","hashOfConfig":"35"},{"size":809,"mtime":1608646480025,"results":"54","hashOfConfig":"35"},{"size":793,"mtime":1609606799903,"results":"55","hashOfConfig":"47"},{"size":2561,"mtime":1609615553917,"results":"56","hashOfConfig":"35"},{"size":1024,"mtime":1609603322999,"results":"57","hashOfConfig":"35"},{"size":319,"mtime":1609602437808,"results":"58","hashOfConfig":"43"},{"size":196,"mtime":1609244143662,"results":"59","hashOfConfig":"35"},{"size":6192,"mtime":1609762587498,"results":"60","hashOfConfig":"47"},{"size":1660,"mtime":1610993962567,"results":"61","hashOfConfig":"35"},{"size":2222,"mtime":1609745712836,"results":"62","hashOfConfig":"35"},{"size":2309,"mtime":1609757070929,"results":"63","hashOfConfig":"35"},{"size":581,"mtime":1609757097775,"results":"64","hashOfConfig":"35"},{"size":799,"mtime":1608627425820,"results":"65","hashOfConfig":"47"},{"size":181,"mtime":1609671921478,"results":"66","hashOfConfig":"35"},{"size":1110,"mtime":1610707355514,"results":"67","hashOfConfig":"35"},{"size":1489,"mtime":1610994285283,"results":"68","hashOfConfig":"35"},{"size":2816,"mtime":1610994721081,"results":"69","hashOfConfig":"35"},{"size":495,"mtime":1610993594671,"results":"70","hashOfConfig":"35"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"satkby",{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},"3jsmse",{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"pib417",{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"94"},"1e3ezo0",{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"94"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/nn/Документы/developing/users-admin/frontend/src/reportWebVitals.ts",[],"/home/nn/Документы/developing/users-admin/frontend/src/index.tsx",[],"/home/nn/Документы/developing/users-admin/frontend/src/components/app/App.tsx",[],["143","144"],"/home/nn/Документы/developing/users-admin/frontend/src/routes/BaseRoutes.tsx",[],"/home/nn/Документы/developing/users-admin/frontend/src/components/table/Table.tsx",[],["145","146"],"/home/nn/Документы/developing/users-admin/frontend/src/helpers/table.helpers.ts",[],"/home/nn/Документы/developing/users-admin/frontend/src/components/table/TableRow.tsx",[],"/home/nn/Документы/developing/users-admin/frontend/src/components/table/TableHead.tsx",[],"/home/nn/Документы/developing/users-admin/frontend/src/components/table/TableToolbar.tsx",[],"/home/nn/Документы/developing/users-admin/frontend/src/hooks/select.hook.ts",["147"],"import { useEffect, useState } from 'react'\nimport { ID, IDType } from '../interfaces/entities.interfaces'\n\nexport function useSelect<T extends object>(observable: Array<ID<T>>) {\n  const [selected, setSelected] = useState<Array<IDType>>([])\n\n  function select(id: IDType | Array<IDType>) {\n    if (Array.isArray(id)) {\n      setSelected([...selected, ...id.filter(s => !selected.includes(s))])\n    } else {\n      const includes: boolean = selected.includes(id)\n\n      if (!includes) {\n        setSelected([...selected, id])\n      }\n    }\n  }\n\n  function unselect(id: IDType | Array<IDType>): void {\n    setSelected(\n      selected.filter(s => (Array.isArray(id) ? !id.includes(s) : s !== id))\n    )\n  }\n\n  function includes(id: IDType): boolean {\n    return selected.includes(id)\n  }\n\n  function allIsSelected(list: Array<IDType>): boolean {\n    return list.length === selected.length\n  }\n\n  function onToggleAll(list: Array<IDType>): void {\n    if (!allIsSelected(list)) {\n      select(list)\n    } else {\n      unselect(list)\n    }\n  }\n\n  function onToggle(id: IDType): void {\n    if (selected.includes(id)) {\n      unselect(id)\n    } else {\n      select(id)\n    }\n  }\n\n  function unselectAll(): void {\n    setSelected([])\n  }\n\n  useEffect(() => {\n    setSelected(selected.filter(s => observable.find(o => o.id === s)))\n  }, [observable])\n\n  return {\n    selected,\n    includes,\n    onToggle,\n    allIsSelected,\n    onToggleAll,\n    unselectAll,\n  }\n}\n",["148","149"],"/home/nn/Документы/developing/users-admin/frontend/src/helpers/date.helpers.ts",[],["150","151"],"/home/nn/Документы/developing/users-admin/frontend/src/styles/theme.ts",["152"],"/home/nn/Документы/developing/users-admin/frontend/src/interfaces/common.interfaces.ts",[],"/home/nn/Документы/developing/users-admin/frontend/src/redux/store.ts",[],"/home/nn/Документы/developing/users-admin/frontend/src/redux/theme/theme-slice.ts",[],"/home/nn/Документы/developing/users-admin/frontend/src/redux/root-reducer.ts",[],"/home/nn/Документы/developing/users-admin/frontend/src/components/theme/ThemeToggler.tsx",[],"/home/nn/Документы/developing/users-admin/frontend/src/components/layouts/editor-layout/EditorLayout.tsx",[],"/home/nn/Документы/developing/users-admin/frontend/src/components/layouts/editor-layout/EditorBottomToolbar.tsx",[],"/home/nn/Документы/developing/users-admin/frontend/src/components/buttons/StatefulButton.tsx",[],"/home/nn/Документы/developing/users-admin/frontend/src/helpers/form-validator-messages.helper.ts",[],"/home/nn/Документы/developing/users-admin/frontend/src/hooks/id-param.hook.ts",[],"/home/nn/Документы/developing/users-admin/frontend/src/views/users/UserFormView.tsx",["153"],"import React, { useEffect } from 'react'\nimport {\n  FormControl,\n  Grid,\n  InputLabel,\n  MenuItem,\n  Select,\n  TextField,\n} from '@material-ui/core'\nimport { DateTimePicker } from '@material-ui/pickers'\nimport { useFormik } from 'formik'\nimport * as yup from 'yup'\nimport { v4 as uuidv4 } from 'uuid'\nimport { EditorLayout } from '../../components/layouts/editor-layout/EditorLayout'\nimport { messages } from '../../helpers/form-validator-messages.helper'\nimport { useLocalStorage } from '../../hooks/local-storage.hook'\nimport { ID, IDType, Role, User } from '../../interfaces/entities.interfaces'\nimport { EditorViewProps } from '../../interfaces/components.interfaces'\nimport { useIDParam } from '../../hooks/id-param.hook'\n\nconst roles = new Map<Role, string>([\n  ['client', 'Клиент'],\n  ['partner', 'Партнер'],\n  ['admin', 'Администратор'],\n])\n\nconst validationSchema = yup.object({\n  email: yup\n    .string()\n    .email(`${messages.incorrect} email адреса`)\n    .required(messages.required),\n  name: yup\n    .string()\n    .max(100, messages.lessThan(100))\n    .required(messages.required),\n  password: yup\n    .string()\n    .min(8, messages.lessThan(8))\n    .max(32, messages.greaterThan(32))\n    .required(messages.required),\n\n  phone: yup.string().max(20, messages.lessThan(20)),\n  role: yup.string().oneOf([...roles.keys()], messages.incorrect),\n  createdOn: yup.date(),\n  updatedOn: yup.date(),\n})\n\nexport const UserFormView: React.FC<EditorViewProps> = props => {\n  const [users, setUsers] = useLocalStorage<Array<ID<User>>>('data-users', [])\n\n  const id = useIDParam() ?? uuidv4()\n\n  const onRemove = (id: IDType) => {\n    setUsers(users.filter(u => u.id !== id))\n  }\n\n  const onAdd = (user: User) => {\n    setUsers([{ ...user, id }, ...users])\n  }\n\n  const onUpdate = (user: ID<User>) => {\n    const foundIndex = users.findIndex(u => u.id === user.id)\n\n    if (foundIndex !== -1) {\n      setUsers([\n        ...[...users].slice(0, foundIndex),\n        { ...user, updatedOn: new Date() },\n        ...[...users].slice(foundIndex + 1),\n      ])\n    }\n  }\n\n  const formik = useFormik({\n    validationSchema,\n    initialValues: {\n      email: '',\n      name: '',\n      password: '',\n      phone: '',\n      role: 'client',\n      createdOn: new Date(),\n      updatedOn: new Date(),\n    },\n    onSubmit: () => {},\n  })\n\n  useEffect(() => {\n    if (props.mode === 'edit') {\n      const user = users.find(u => u.id === id)\n\n      if (user) {\n        formik.setValues({\n          ...user,\n          createdOn: new Date(user.createdOn),\n          updatedOn: new Date(user.updatedOn),\n        })\n      }\n    }\n  }, [users])\n\n  return (\n    <EditorLayout\n      {...props}\n      id={id}\n      valid={\n        !formik.isValidating &&\n        formik.isValid &&\n        !!Object.keys(formik.touched).length\n      }\n      onRemove={onRemove.bind(null, id)}\n      onSave={\n        props.mode === 'add'\n          ? onAdd.bind(null, {\n              ...formik.values,\n              role: formik.values.role as Role,\n            })\n          : onUpdate.bind(null, {\n              ...formik.values,\n              // Default value '' is for preventing destroy\n              // invoked by undefinded value after\n              // removing item from editor form\n              id: users.find(u => u.id === id)?.id || '',\n              role: formik.values.role as Role,\n            })\n      }\n    >\n      <Grid item xs={12}>\n        <TextField\n          {...formik.getFieldProps('email')}\n          id='email'\n          fullWidth\n          label='Email'\n          variant='outlined'\n          error={formik.touched.email && Boolean(formik.errors.email)}\n          helperText={formik.touched.email && formik.errors.email}\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <TextField\n          {...formik.getFieldProps('name')}\n          id='name'\n          fullWidth\n          label='Имя'\n          variant='outlined'\n          error={formik.touched.name && Boolean(formik.errors.name)}\n          helperText={formik.touched.name && formik.errors.name}\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <TextField\n          {...formik.getFieldProps('password')}\n          id='password'\n          fullWidth\n          type='password'\n          label='Пароль'\n          variant='outlined'\n          error={formik.touched.password && Boolean(formik.errors.password)}\n          helperText={formik.touched.password && formik.errors.password}\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <TextField\n          {...formik.getFieldProps('phone')}\n          id='phone'\n          fullWidth\n          label='Телефон'\n          variant='outlined'\n          error={formik.touched.phone && Boolean(formik.errors.phone)}\n          helperText={formik.touched.phone && formik.errors.phone}\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <FormControl variant='outlined' fullWidth>\n          <InputLabel id='role-label'>{'Роль'}</InputLabel>\n          <Select\n            {...formik.getFieldProps('role')}\n            id='role'\n            labelId='role-label'\n            label='Роль'\n          >\n            {[...roles].map(([role, label]) => (\n              <MenuItem value={role} key={role}>\n                {label}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </Grid>\n\n      <Grid item xs={12} sm={6}>\n        <DateTimePicker\n          {...formik.getFieldProps('createdOn')}\n          id='createdOn'\n          readOnly\n          fullWidth\n          label='Дата создания'\n          error={formik.touched.createdOn && Boolean(formik.errors.createdOn)}\n          helperText={formik.touched.createdOn && formik.errors.createdOn}\n        />\n      </Grid>\n      <Grid item xs={12} sm={6}>\n        <DateTimePicker\n          {...formik.getFieldProps('updatedOn')}\n          id='updatedOn'\n          readOnly\n          fullWidth\n          label='Дата изменения'\n          error={formik.touched.updatedOn && Boolean(formik.errors.updatedOn)}\n          helperText={formik.touched.updatedOn && formik.errors.updatedOn}\n        />\n      </Grid>\n    </EditorLayout>\n  )\n}\n","/home/nn/Документы/developing/users-admin/frontend/src/views/users/UsersView.tsx",[],"/home/nn/Документы/developing/users-admin/frontend/src/components/navigation/navbar/Navbar.tsx",[],"/home/nn/Документы/developing/users-admin/frontend/src/components/navigation/drawer/Drawer.tsx",[],"/home/nn/Документы/developing/users-admin/frontend/src/components/navigation/drawer/DrawerListOption.tsx",[],"/home/nn/Документы/developing/users-admin/frontend/src/hooks/local-storage.hook.ts",[],"/home/nn/Документы/developing/users-admin/frontend/src/components/navigation/navbar/NavbarLogo.tsx",[],"/home/nn/Документы/developing/users-admin/frontend/src/components/layouts/root/RootLayout.tsx",[],"/home/nn/Документы/developing/users-admin/frontend/src/components/layouts/filter/FilterLayout.tsx",[],"/home/nn/Документы/developing/users-admin/frontend/src/components/filters/UserFilter.tsx",["154"],"/home/nn/Документы/developing/users-admin/frontend/src/hooks/filter-state.hook.ts",[],{"ruleId":"155","replacedBy":"156"},{"ruleId":"157","replacedBy":"158"},{"ruleId":"155","replacedBy":"159"},{"ruleId":"157","replacedBy":"160"},{"ruleId":"161","severity":1,"message":"162","line":55,"column":6,"nodeType":"163","endLine":55,"endColumn":18,"suggestions":"164"},{"ruleId":"155","replacedBy":"165"},{"ruleId":"157","replacedBy":"166"},{"ruleId":"155","replacedBy":"167"},{"ruleId":"157","replacedBy":"168"},{"ruleId":"161","severity":1,"message":"169","line":16,"column":3,"nodeType":"170","endLine":16,"endColumn":12},{"ruleId":"161","severity":1,"message":"171","line":99,"column":6,"nodeType":"163","endLine":99,"endColumn":13,"suggestions":"172"},{"ruleId":"161","severity":1,"message":"173","line":62,"column":6,"nodeType":"163","endLine":62,"endColumn":32,"suggestions":"174"},"no-native-reassign",["175"],"no-negated-in-lhs",["176"],["175"],["176"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'selected'. Either include it or remove the dependency array. You can also do a functional update 'setSelected(s => ...)' if you only need 'selected' in the 'setSelected' call.","ArrayExpression",["177"],["175"],["176"],["175"],["176"],"React Hook useEffect received a function whose dependencies are unknown. Pass an inline function instead.","Identifier","React Hook useEffect has missing dependencies: 'formik', 'id', and 'props.mode'. Either include them or remove the dependency array.",["178"],"React Hook useEffect has a missing dependency: 'onFilter'. Either include it or remove the dependency array. If 'onFilter' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["179"],"no-global-assign","no-unsafe-negation",{"desc":"180","fix":"181"},{"desc":"182","fix":"183"},{"desc":"184","fix":"185"},"Update the dependencies array to be: [observable, selected]",{"range":"186","text":"187"},"Update the dependencies array to be: [formik, id, props.mode, users]",{"range":"188","text":"189"},"Update the dependencies array to be: [email, role, phone, name, onFilter]",{"range":"190","text":"191"},[1327,1339],"[observable, selected]",[2614,2621],"[formik, id, props.mode, users]",[1525,1551],"[email, role, phone, name, onFilter]"]